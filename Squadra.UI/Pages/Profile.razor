@page "/profile"
@attribute [Authorize]

@using Squadra.UI.Models
@using Squadra.UI.Services
@inject IUserService UserService

<div class="container mx-auto p-4">
    <h1 class="text-2xl font-bold mb-4">Mon Profil</h1>

    @if (user == null)
    {
        @if (errorMessage != null)
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                <strong class="font-bold">Erreur !</strong>
                <span class="block sm:inline">@errorMessage</span>
            </div>
        }
        else
        {
            <p>Chargement du profil...</p>
        }
    }
    else
    {
        <div class="bg-white shadow-md rounded-lg p-6">
            <div class="mb-4">
                <label class="font-bold text-gray-700">Nom :</label>
                <p class="text-gray-900">@user.Name</p>
            </div>
            <div class="mb-4">
                <label class="font-bold text-gray-700">Email :</label>
                <p class="text-gray-900">@user.Email</p>
            </div>
            <div class="mb-4">
                <label class="font-bold text-gray-700">Ville :</label>
                <p class="text-gray-900">@(user.Ville ?? "Non spécifiée")</p>
            </div>
            <div>
                <label class="font-bold text-gray-700">Niveau :</label>
                <p class="text-gray-900">@user.SkillLevel / 5</p>
            </div>
            @* TODO: Add edit button and display sports/ratings here *@
        </div>
    }
</div>

@code {
    private UserDto? user;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await UserService.GetMyProfileAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Impossible de charger le profil : {ex.Message}";
        }
    }
}
