@page "/register"
@using System
@using Squadra.UI.Models
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="flex items-center justify-center min-h-screen bg-gray-100">
    <div class="px-8 py-6 mt-4 text-left bg-white shadow-lg rounded-lg">
        <h3 class="text-2xl font-bold text-center">Créer un nouveau compte</h3>
        <EditForm Model="@registerDto" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <div class="mt-4">
                <div>
                    <label class="block" for="name">Nom</label>
                    <InputText id="name" @bind-Value="registerDto.Name" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600" />
                    <ValidationMessage For="() => registerDto.Name" />
                </div>
                <div class="mt-4">
                    <label class="block" for="email">Email</label>
                    <InputText id="email" @bind-Value="registerDto.Email" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600" />
                    <ValidationMessage For="() => registerDto.Email" />
                </div>
                <div class="mt-4">
                    <label class="block">Mot de passe</label>
                    <InputText id="password" type="password" @bind-Value="registerDto.Password" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600" />
                    <ValidationMessage For="() => registerDto.Password" />
                </div>
                <div class="mt-4">
                    <label class="block">Ville (optionnel)</label>
                    <InputText id="ville" @bind-Value="registerDto.Ville" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600" />
                </div>
                <div class="mt-4">
                    <label class="block">Niveau de compétence</label>
                    <InputSelect id="skillLevel" @bind-Value="registerDto.SkillLevel" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600">
                        <option value="">Sélectionner un niveau</option>
                        @foreach (var skillLevel in Enum.GetValues(typeof(SkillLevel)))
                        {
                            <option value="@skillLevel">@skillLevel.ToString()</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => registerDto.SkillLevel" />
                </div>
                <div class="flex items-baseline justify-between">
                    <button class="px-6 py-2 mt-4 text-white bg-blue-600 rounded-lg hover:bg-blue-900">S'inscrire</button>
                    <a href="/login" class="text-sm text-blue-600 hover:underline">Déjà un compte ?</a>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private RegisterDto registerDto = new RegisterDto();

    private async Task HandleRegister()
    {
        try
        {
            await AuthService.Register(registerDto);
            NavigationManager.NavigateTo("/profile");
        }
        catch (Exception ex)
        {
            // TODO: Display error to user
            Console.WriteLine($"Registration failed: {ex.Message}");
        }
    }
}
