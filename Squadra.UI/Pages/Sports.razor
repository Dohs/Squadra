@page "/sports"
@attribute [Authorize]

@using Squadra.UI.Models
@using Squadra.UI.Services
@inject ISportService SportService

<div class="container mx-auto p-4">
    <h1 class="text-2xl font-bold mb-4">Sports disponibles</h1>

    @if (sports == null)
    {
        @if (errorMessage != null)
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                <strong class="font-bold">Erreur !</strong>
                <span class="block sm:inline">@errorMessage</span>
            </div>
        }
        else
        {
            <p>Chargement des sports...</p>
        }
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            @foreach (var sport in sports)
            {
                <div class="bg-white shadow-md rounded-lg p-4">
                    <h2 class="text-xl font-semibold">@sport.Name</h2>
                    @* TODO: Add functionality to select/deselect as favorite sport *@
                </div>
            }
        </div>
    }
</div>

@code {
    private List<SportDto>? sports;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            sports = await SportService.GetAllSportsAsync();
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Impossible de charger les sports : {ex.Message}";
            sports = null;
        }
    }
}
